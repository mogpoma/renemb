[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "street",
    "expression": "grel:value + \", \" + cells[\"city_state_zip\"].value",
    "onError": "store-error",
    "newColumnName": "full_address",
    "columnInsertIndex": 1,
    "description": "Create column full_address at index 1 based on column street using expression grel:value + \", \" + cells[\"city_state_zip\"].value"
  },
  {
    "op": "core/column-move",
    "columnName": "full_address",
    "index": 2,
    "description": "Move column full_address to position 2"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "full_address",
    "urlExpression": "grel:'http://open.mapquestapi.com/nominatim/v1/search.php?'+ 'format=json&' + 'key=JWbcrLmu5UfJ9n1krjAMdr0jz3QIG0ha&'+ 'q='+ escape(value, \"url\")",
    "onError": "store-error",
    "newColumnName": "mapquest_locations",
    "columnInsertIndex": 3,
    "delay": 1000,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.2 [55c921b]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column mapquest_locations at index 3 by fetching URLs based on column full_address using expression grel:'http://open.mapquestapi.com/nominatim/v1/search.php?'+ 'format=json&' + 'key=JWbcrLmu5UfJ9n1krjAMdr0jz3QIG0ha&'+ 'q='+ escape(value, \"url\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "mapquest_locations",
    "expression": "grel:value.parseJson()[0].lat",
    "onError": "store-error",
    "newColumnName": "latitude",
    "columnInsertIndex": 4,
    "description": "Create column latitude at index 4 based on column mapquest_locations using expression grel:value.parseJson()[0].lat"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "mapquest_locations",
    "expression": "grel:value.parseJson()[0].lon",
    "onError": "store-error",
    "newColumnName": "longitude",
    "columnInsertIndex": 4,
    "description": "Create column longitude at index 4 based on column mapquest_locations using expression grel:value.parseJson()[0].lon"
  }
]